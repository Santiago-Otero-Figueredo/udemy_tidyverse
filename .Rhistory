install.packages(c("tidyverse", "gapminder", "nycflights13", "lahman"))
nycflights13::flights
install.packages('tyidiverser', 'gapminder', 'nycflights13', 'lahman')
library('tyidiverser', 'gapminder', 'nycflights13', 'lahman')
library(gapminder)
library(nycflights13)
install.packages('lahman')
install.packages('lahman')
install.packages('Lahman')
library('tyidiverser', 'gapminder', 'nycflights13', 'Lahman')
library(Lahman)
library(tidyverse)
library(tyidiverser, gapminder, nycflights13, Lahman)
View(mpg)
help(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y= cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = cyl, y= cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y= cyl))
help(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y= drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, fill=class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, color=class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, size=class))
# Transparencia de los puntos
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, alpha=class))
# Forma de los puntos
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, shape=class))
# Eleccion manual de esteticas
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy), color=red)
# Eleccion manual de esteticas
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy), color='red')
# Condiciones
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, color=displ < 4))
library(tyidiverser, gapminder, nycflights13, Lahman)
library(gapminder)
library(nycflights13)
library(Lahman)
library(tidyverse)
# Condiciones
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, color=displ < 4))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy),
shape=23, size=10,  color='red', fill='yellow')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy),
shape=23, size=5,  color='red', fill='yellow')
help(ggplot2)
# CREAR AGRUPACIONES
# FACETS
# facet_wrap(~<FORMULA_VARIABLE>): La variable debe ser discreta
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_wrap(~class)
# CREAR AGRUPACIONES
# FACETS
# facet_wrap(~<FORMULA_VARIABLE>): La variable debe ser discreta
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_wrap(~cty)
# CREAR AGRUPACIONES
# FACETS
# facet_wrap(~<FORMULA_VARIABLE>): La variable debe ser discreta
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_wrap(~class)
# CREAR AGRUPACIONES
# FACETS
# facet_wrap(~<FORMULA_VARIABLE>): La variable debe ser discreta o cualitativa
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_wrap(~class, nrow=2)
# CREAR AGRUPACIONES
# FACETS
# facet_wrap(~<FORMULA_VARIABLE>): La variable debe ser discreta o cualitativa
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_wrap(~class, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_grid(drv~cly, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_grid(drv~cly)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_grid(drv~cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x=drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy)) +
facet_grid(.~cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy)) +
facet_grid(drv~.)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~class, nrow = 3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~class, nrow = 3)
library(tyidiverser, gapminder, nycflights13, Lahman)
#Visualizacion de informacion - 11 de Noviembre de 2021
install.packages('tyidiverser', 'gapminder', 'nycflights13', 'Lahman')
#Visualizacion de informacion - 11 de Noviembre de 2021
install.packages('tyidiverser', 'gapminder', 'nycflights13', 'Lahman')
library(tyidiverser, gapminder, nycflights13, Lahman)
library(gapminder)
library(Lahman)
library(nycflights13)
library(tidyverse)
View(mpg)
help(mpg)
help(ggplot2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy))
# Color de los puntos
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, color=class))
# Tamaño de los puntos (conviene que sea numérico)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, size=class))
# Transparencia de los puntos
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, alpha=class))
# Forma de los puntos (solo permite 6 formas a la vez)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, shape=class))
# Condiciones
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy, color=displ < 4))
# Eleccion manual de esteticas
# Color = nombre color en string
# size = tamaño del punto en mm
# shape = forma del punto con numeros del 0 al 25
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy), color='red')
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy),
shape=23, size=5,  color='red', fill='yellow')
# CREAR AGRUPACIONES
# FACETS
# facet_wrap(~<FORMULA_VARIABLE>): La variable debe ser discreta o cualitativa
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_wrap(~class, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy)) +
facet_grid(drv~cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~class, nrow = 3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv~)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv~.)
# Diferentes geometrias
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype= drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype= drv, color=drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype= drv, color=drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=drv)) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype= drv, color=drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group= drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group= drv, color = drv))
# Evitar duplicidad en multiples graficas
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color=drv)) +
geom_point() +
geom_smooth(mapping = aes(linetype= drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=drv)) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype= drv, color=drv))
# Evitar duplicidad en multiples graficas
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color=drv)) +
geom_point() +
geom_smooth(mapping = aes(linetype= drv))
# Evitar duplicidad en multiples graficas
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color=drv)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(mapping = aes(color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color=drv)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'suv'))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'suv'))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'suv'), se = F)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'suv'))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'suv'), se = F)
ggplot(data = mpg, mapping = aes(x=displ, y = hwy,color = drv)) +
geom_point() +
geom_smooth( se = F)
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy)) +
geom_smooth(mapping = aes(x=displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype= drv))
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy, shape = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy, shape = drv, color = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy, shape = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point(mapping = aes(shape = drv)) +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point(mapping = aes(shape = drv, color=drv)) +
geom_smooth()
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point(mapping = aes(shape = drv, color=drv)) +
geom_smooth(se=F)
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point(mapping = aes(shape = drv, color=drv)) +
geom_smooth(mapping = aes(typeline = drv), se=F)
ggplot(data = mpg, mapping = aes(x=displ, y = hwy)) +
geom_point(mapping = aes(shape = drv, color=drv)) +
geom_smooth(mapping = aes(linetype = drv), se=F)
View(diamonds)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
#creando un subconjutno para realzar el ejemplo
demo_diamons = tribble(
~cut,        ~freqs,
"Fair",        1610,
"Good",        4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo_diamons, mapping = aes(x = cut, y = freqs), stat = 'identity')
ggplot(data = demo_diamons) +
geom_bar(mapping = aes(x = cut, y = freqs), stat = 'identity')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group=1))
ggplot(data = diamonds) +
stat_summary(mapping = aes(x = cut, y = depth))
ggplot(data = diamonds) +
stat_summary(mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
stat_summary(mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
#Visualizacion de informacion - 11 de Noviembre de 2021
install.packages('tyidiverser', 'gapminder', 'nycflights13', 'Lahman')
library(tyidiverser, gapminder, nycflights13, Lahman)
library(Lahman)
library(nycflights13)
library(tidyverse)
library(gapminder)
ggplot(data = demo_diamons) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 0.2, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(position = "fill")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y= hwy))
ggplot(data = mpg, mapping = aes(x = displ, y= hwy)) +
geom_point(position = "jitter")
ggplot(data = mpg, mapping = aes(x = displ, y= hwy)) +
geom_jitter()
## Volvemos al scatterplot
## position = "jitter" --> quita los puntos superpuestos y muetra todo los puntos de la grafica
ggplot(data = mpg, mapping = aes(x = displ, y= hwy)) +
geom_point(position = "jitter")
ggplot(data = mpg, mapping = aes(x = displ, y= hwy)) +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = class, y= hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y= hwy)) +
geom_boxplot() +
coord_flip()
es = map_data("es")
library(maps)
es = map_data("es")
usa = map_data("usa")
ggplot(data = usa, mapping = aes(long, lat, group = group)) +
geom_polygon(fill = "blue", color = "white")
usa = map_data("usa")
ggplot(data = usa, mapping = aes(long, lat, group = group)) +
geom_polygon(fill = "blue", color = "white") +
coord_quickmap()
italy = map_data("italy")
ggplot(data = italy, mapping = aes(long, lat, group = group)) +
geom_polygon(fill = "blue", color = "white") +
coord_quickmap()
ggplot(data = diamonds, mapping = aes(x = cut, fill= cut)) +
geom_bar(show.legend = F, width = 1)
ggplot(data = diamonds, mapping = aes(x = cut, fill= cut)) +
geom_bar(show.legend = F, width = 1) +
theme(aspect.ratio = 1)
ggplot(data = diamonds, mapping = aes(x = cut, fill= cut)) +
geom_bar(show.legend = F, width = 1) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
ggplot(data = diamonds, mapping = aes(x = cut, fill= cut)) +
geom_bar(show.legend = F, width = 1) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = clarity, y = ..count.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = clarity, y = ..count..))
italy = map_data("italy")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = clarity, y = ..count..)) +
coord_polar() +
facet_wrap(~cut)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = clarity, y = ..count..)) +
coord_polar() +
facet_wrap(~cut)+
labs(x = NULL, y = NULL, title="Ejemplo final",
caption="Dos variabes cruzadas de diamaons",
subtitle = "subtitulo")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy )) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy )) +
geom_point() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy )) +
geom_point() +
geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy )) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))+
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
ggplot(data = diamonds, mapping = aes(x = cut, fill= cut)) +
geom_bar(show.legend = F, width = 1) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = clarity)) +
coord_polar() +
facet_wrap(~cut)+
labs(x = NULL, y = NULL, title="Ejemplo final",
caption="Dos variabes cruzadas de diamaons",
subtitle = "subtitulo")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = clarity, y = ..count..)) +
coord_polar() +
facet_wrap(~cut)+
labs(x = NULL, y = NULL, title="Ejemplo final",
caption="Dos variabes cruzadas de diamaons",
subtitle = "subtitulo")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))+
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = cut, y = ..count..)) +
coord_polar() +
facet_wrap(~cut)+
labs(x = NULL, y = NULL, title="Ejemplo final",
caption="Dos variabes cruzadas de diamaons",
subtitle = "subtitulo")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity, fill = clarity, y = ..count..)) +
coord_polar() +
facet_wrap(~cut)+
labs(x = NULL, y = NULL, title="Ejemplo final",
caption="Dos variabes cruzadas de diamaons",
subtitle = "subtitulo")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))+
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
